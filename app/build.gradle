// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: 'org.jetbrains.dokka'

dokka {
    outputFormat = 'html'
    outputDirectory = "docs"
    subProjects = ["app", "pravega"]
    configuration {
        moduleName = "./"
        includeNonPublic = true
    }
}

buildscript {
    ext {
        // global variables
        kotlin_version = "1.4.10"
        compose_version = "1.0.0-alpha05"
        dokka_version = "0.10.1"

        compose = [
                "androidx.compose.ui:ui:$compose_version",
                "androidx.ui:ui-tooling:$compose_version",
                "androidx.compose.foundation:foundation:$compose_version",
                "androidx.compose.material:material:$compose_version",
                "androidx.compose.material:material-icons-core:$compose_version",
                "androidx.compose.material:material-icons-extended:$compose_version",
                "androidx.compose.runtime:runtime-livedata:$compose_version"
        ]

        retrofit_version = "2.9.0"
        okhttp_version = "4.9.0"
        moshi_version = "1.11.0"
        networking = [
                "com.squareup.okhttp3:okhttp:$okhttp_version",
                "com.squareup.retrofit2:retrofit:$retrofit_version",
                "com.squareup.retrofit2:converter-moshi:$retrofit_version",
                "com.squareup.moshi:moshi:$moshi_version",
                "com.squareup.moshi:moshi-kotlin:$moshi_version"
        ]
        networkingKapt = [
                "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"
        ]


        coroutines_version = '1.3.2'
        coroutines = [
                "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version",
                "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
        ]

        lifecycle_version = "2.2.0"
        work_version = "2.2.0"
        lifecycle = [
                "androidx.lifecycle:lifecycle-extensions:$lifecycle_version",
                "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version",
                "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version",
                "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version",
                "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version",
                "androidx.work:work-runtime-ktx:$work_version",
                "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
        ]

        extension = [
                "androidx.core:core-ktx:1.3.2",
                "androidx.fragment:fragment-ktx:1.2.5",
                "androidx.collection:collection-ktx:1.1.0"
        ]

        room_version = "2.2.5"
        room = [
                "androidx.room:room-runtime:$room_version"
        ]
        roomKapt = [
                "androidx.room:room-compiler:$room_version"
        ]

        camerax_version = "1.0.0-beta11"
        cameraview_version = "1.0.0-alpha18"
        camera = [
                "androidx.camera:camera-camera2:$camerax_version",
                "androidx.camera:camera-lifecycle:$camerax_version",
                "androidx.camera:camera-view:$cameraview_version",
                "androidx.camera:camera-extensions:$cameraview_version"
        ]


        // Use Firebase BoM instead
        firebase_ui_version = "6.4.0"
        firebase = [
                "com.google.firebase:firebase-config:20.0.0",
                "com.firebaseui:firebase-ui-database:$firebase_ui_version",
                "com.firebaseui:firebase-ui-firestore:$firebase_ui_version",
                "com.firebaseui:firebase-ui-auth:$firebase_ui_version",
                "com.firebaseui:firebase-ui-storage:$firebase_ui_version"
        ]


        external = [
                "id.zelory:compressor:3.0.0",
                "com.github.GrenderG:Toasty:1.4.2"
        ]


        mlkit = [
                "com.google.mlkit:image-labeling:17.0.0"
        ]

        dagger_version = "2.28-alpha"
        dagger = [
                "com.google.dagger:hilt-android:$dagger_version"
        ]
        daggerKapt = [
                "com.google.dagger:hilt-android-compiler:$dagger_version"
        ]
    }

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.0-alpha14'
        classpath 'com.google.gms:google-services:4.3.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$dagger_version"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url "https://clojars.org/repo/" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}